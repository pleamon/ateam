model Team {
    id                   String                 @id @default(uuid())
    name                 String
    description          String?
    createdAt            DateTime               @default(now())
    updatedAt            DateTime               @updatedAt
    tasks                Task[]
    TeamMember           TeamMember[]
    Documentation        Documentation[]
    Requirement          Requirement[]
    RequirementQuestion  RequirementQuestion[]
    DomainKnowledge      DomainKnowledge[]
    Minimap              Minimap[]
    ApiDesign            ApiDesign[]
    DataStructure        DataStructure[]
    SystemArchitecture   SystemArchitecture[]
    PlatformArchitecture PlatformArchitecture[]

    @@schema("team")
}

model TeamMember {
    id                   String                 @id @default(uuid())
    teamId               String
    team                 Team                   @relation(fields: [teamId], references: [id])
    name                 String                 @default("未命名成员")
    workPrompt           String?                @db.Text // AI agent的工作指导提示词
    responsibilities     String[]
    skills               String[]
    createdAt            DateTime               @default(now())
    updatedAt            DateTime               @updatedAt
    TeamMemberTask       TeamMemberTask[]
    TeamMemberWorklog    TeamMemberWorklog[]
    MemberActivity       MemberActivity[]
    Documentation        Documentation[]
    Requirement          Requirement[]
    ApiDesign            ApiDesign[]
    DataStructure        DataStructure[]
    SystemArchitecture   SystemArchitecture[]
    PlatformArchitecture PlatformArchitecture[]
    Minimap              Minimap[]
    DomainKnowledge      DomainKnowledge[]
    RequirementQuestion  RequirementQuestion[]

    @@schema("team")
}

model TeamMemberTask {
    id           String     @id @default(uuid())
    teamMemberId String
    teamMember   TeamMember @relation(fields: [teamMemberId], references: [id])
    taskId       String
    task         Task       @relation(fields: [taskId], references: [id])
    status       String     @default("todo") // todo, in_progress, testing, done
    createdAt    DateTime   @default(now())
    updatedAt    DateTime   @updatedAt

    @@schema("team")
}

model TeamMemberWorklog {
    id           String     @id @default(uuid())
    teamMemberId String
    teamMember   TeamMember @relation(fields: [teamMemberId], references: [id])
    taskId       String
    task         Task       @relation(fields: [taskId], references: [id])
    content      String?
    createdAt    DateTime   @default(now())
    updatedAt    DateTime   @updatedAt

    @@schema("team")
}

model TaskActivity {
    id        String   @id @default(uuid())
    taskId    String
    task      Task     @relation(fields: [taskId], references: [id])
    body      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@schema("team")
}

model MemberActivity {
    id           String     @id @default(uuid())
    teamMemberId String
    teamMember   TeamMember @relation(fields: [teamMemberId], references: [id])
    body         String
    createdAt    DateTime   @default(now())
    updatedAt    DateTime   @updatedAt

    @@schema("team")
}

model PromptTemplate {
    id               String   @id @default(uuid())
    name             String   // 模板名称，如"前端开发工程师"
    responsibility   String   // 对应的职责
    prompt           String   @db.Text // 提示词内容
    description      String?  // 模板描述
    isActive         Boolean  @default(true) // 是否启用
    createdAt        DateTime @default(now())
    updatedAt        DateTime @updatedAt

    @@schema("team")
}
